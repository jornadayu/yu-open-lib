name: New Release and Deploy

on:
  workflow_dispatch:
    inputs:
      fakeDeploy:
        type: boolean
        default: false
        description: Run pre-release tasks but don't deploy to NPM or GitHub
      releaseType:
        description: 'Release Type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major 

jobs:
  new_release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Yarn Dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ hashFiles('**/yarn.lock') }}

      - name: Setup Node and Yarn
        uses: actions/setup-node@v2
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version: '14'
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --prefer-offline --ignore-scripts

      - name: Setup Git config
        run: |
          git config --global user.name 'jornadayu'
          git config --global user.email 'jornadayu@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      # https://stackoverflow.com/a/61919791/10416161
      - name: Get current (old) project version
        id: old_version
        run: |
          content=`cat package.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"

      - name: Bump project version
        run: yarn version --${{ github.event.inputs.releaseType }}

      # https://stackoverflow.com/a/61919791/10416161
      - name: Get new project version
        id: new_version
        run: |
          content=`cat package.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"

      - name: Set release version for unreleased Stories
        run: |
          bin/set_release_badges.sh ${{ fromJson(steps.new_version.outputs.packageJson).version }}
          bin/check_unreleased.sh
          git add src/stories
          git commit --amend --no-edit

      - name: Push changes
        if:  ${{ github.event.inputs.fakeDeploy == 'false' }}
        run: git push origin master --tags

      - name: Publish package
        run: yarn publish
        if:  ${{ github.event.inputs.fakeDeploy == 'false' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        with:
          fromTag: ${{ fromJson(steps.old_version.outputs.packageJson).version }}
          toTag: ${{ fromJson(steps.new_version.outputs.packageJson).version }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if:  ${{ github.event.inputs.fakeDeploy == 'false' }}
        with:
          body: |
            https://www.npmjs.com/package/yu-open-lib/v/${{ fromJson(steps.new_version.outputs.packageJson).version }}}

            ${{steps.github_release.outputs.changelog}}
