image: node:14.16-buster

pipelines:
  pull-requests:
    '**': # Run for any branch
      - step:
          name: Tests, Linting and Build
          caches: 
            - nodecustom
            - yarn
          script:
            - unset NPM_CONFIG_USER
            - node --version
            # Post-install action also builds the library
            - yarn
            - yarn test --watchAll=false --passWithNoTests
            - yarn run eslint src/**/*.{ts,tsx}
            # Example build
            - cd example
            - yarn
            - yarn build

  branches:
    # Run on merges to 'master' branch
    master:
      - step:
          name: Tag version bump
          script:
            # https://support.atlassian.com/bitbucket-cloud/docs/push-back-to-your-repository/
            - git remote set-url origin ${BITBUCKET_GIT_SSH_ORIGIN}
            - echo $PRIVATE_KEY > ~/.ssh/id_rsa.tmp
            - base64 -d ~/.ssh/id_rsa.tmp > ~/.ssh/id_rsa
            - chmod 600 ~/.ssh/id_rsa
            # Get current version from package.json and create new tag with it
            - VERSION=$(yarn version:current | sed -n '3 p')
            - git tag "v${VERSION}" ${BITBUCKET_COMMIT} && git push origin --tags || echo "Tag already exists, not creating new release"
      - step:
          name: Deploy to NPM
          deployment: production
          trigger: manual
          script:
            - unset NPM_CONFIG_USER
            - node --version
            - yarn
            - apt-get update
            - apt-get install -y jq
            - EXTRA_ARGS="--access=public" ./deploy.sh

definitions:
  caches:
    # https://community.atlassian.com/t5/Bitbucket-questions/Is-Yarn-supported-for-bitbucket-pipelines-caching/qaq-p/650816#M49760
    nodecustom: ./node_modules
    yarn: /usr/local/share/.cache/yarn
